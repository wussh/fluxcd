apiVersion: v1
kind: Namespace
metadata:
  name: siglens

---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: siglens
  namespace: siglens
spec:
  interval: 24h
  url: https://siglens.github.io/charts

---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: siglens
  namespace: siglens
spec:
  chart:
    spec:
      chart: siglens
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: siglens
      version: 0.1.3
  interval: 24h
  releaseName: siglens
  timeout: 15m
  values:
    image:
      repository: siglens/siglens
      pullPolicy: Always
      tag: latest
    ingest:
      service:
        serviceType: "ClusterIP"
        port: 8081
        annotations: {}
    query:
      service:
        serviceType: "ClusterIP"
        port: 5122
        annotations: {}
    otel:
      service:
        serviceType: "ClusterIP"
        port: 4318
        annotations: {}

    configs:
      ingestPort: 8081  # port used for siglens ingestion servers
      queryPort: 5122  # port used for siglens ui webserver
      metricsPort: 2222
      queryNode: true
      ingestNode: true

    storage:
      # set to true for default class, else will create a new class with below arguments
      defaultClass: true

      # size of the volume the PVC will request
      size: 1Gi

  k8sExporter:
    enabled: true
    image:
      repository: ghcr.io/opsgenie/kubernetes-event-exporter
      pullPolicy: IfNotPresent
      tag: v0.11
    configs:
      index: kubernetes-events  # output index name for kubernetes events

  logsExporter:
    enabled: true
    image:
      repository: fluent/fluentd-kubernetes-daemonset
      pullPolicy: IfNotPresent
      tag: v1.14-debian-elasticsearch7-1
    configs:
      indexPrefix: logstash

  otelCollector:
    enabled: true
    image:
      repository: otel/opentelemetry-collector
      pullPolicy: IfNotPresent
      tag: latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 1000

  securityContext:
    capabilities:
      drop:
      - ALL
    runAsUser: 1000

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  nodeSelector: {}

  tolerations: []  # Ensure this is correctly specified as an array

  affinity: {}
